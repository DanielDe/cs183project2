#!/usr/csshare/bin/python

# Daniel de Haas, Oliver Chou
# 3/12/13
# CS 183 - Winter '13
# Project #2 - add_group

import re 
import sys
import datetime
import os

def write_to_log(s):
    f = open('accounts.log', 'a')
    f.write(s)
    f.close()

def write_error(e):
    sys.stderr.write(e)
    write_to_log(datetime.datetime.now().strftime('%Y%m%d%H%M%S') + ' WARN add_group ' + e)

# check for mandatory command line arguments 
mandatory_args = {'-n' : '<name>', '-g' : '<gid>'}

def print_usage():
    usage = ''
    for s in [key + ' ' + mandatory_args[key] for key in mandatory_args]:
        usage += s + ' '
    write_error('Usage: ' + usage + '\n') 

arguments = sys.argv[1:]
if len(arguments) is not 2 * len(mandatory_args):
    write_error('Error: wrong number of command line arguments.\n')
    print_usage()
    sys.exit(1)

args = {}
for i in range(0, len(arguments), 2):
    if arguments[i] not in mandatory_args:
        write_error('Error: unrecognized command line argument "' + arguments[i] + '"\n')
        print_usage()
        sys.exit(1)
    args[arguments[i]] = arguments[i + 1]

def backup_file(f):
    timestamp = datetime.datetime.now().strftime('%Y%m%d%H%M%S')
    os.system('cp ' + f + ' ' + f + '.' + timestamp)

# check if group name is alphanumeric 
if not args['-n'].isalnum():
    write_error('Error: group name must be alphanumeric\n')
    sys.exit(1)

# check if the gid is numeric and between 0 and 65535
if not args['-g'].isdigit() or not 0 <= int(args['-g']) <= 65535:
    write_error('Error: gid must be numeric and between 0 and 65535\n')
    sys.exit(1)

# read the group file 
backup_file('etc/group')
f = open('etc/group', 'r')
lines = [line.strip() for line in f.readlines() if line.strip() != '' and line[0] != '#']
f.close()

# check if the group name or gid is already present 
for line in lines:
    if args['-n'] == line[:line.find(':')]:
        write_error('Error: group name already exists.\n')
        sys.exit(1)
    line = line[line.find(':') + 1:]
    line = line[line.find(':') + 1:]
    if args['-g'] == line[:line.find(':')]:
        write_error('Error: gid already exists.\n')
        sys.exit(1)
        
# add the new group to the group file 
f = open('etc/group', 'a')
new_group = '\n' + args['-n'] + ':x:' + args['-g'] + ':\n'
f.write(new_group)
f.close()

write_to_log(datetime.datetime.now().strftime('%Y%m%d%H%M%S') + ' INFO add_group added group: ' + new_group[1:])
